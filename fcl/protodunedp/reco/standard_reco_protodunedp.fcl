#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "calorimetry_dune10kt.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "particleid.fcl"
#include "showerfindermodules_dune.fcl"
#include "channelstatus_pddp.fcl"
#include "tools_dune.fcl"
process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodunedphase_reco_services_legacy
}


# services.message.destinations.LogStandardOut.threshold: "INFO"
services.CrpGainService:					@local::protodunedphase_crpgain
services.ChannelStatusService:         				@local::pddp_channel_status_lemblind
services.AuxDetGeometry: @local::protodunedphase_auxdet_geo
services.Geometry:						@local::protodunedphase_geo

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents: -1
  fileNames: ["detsim.root"]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:
 {
# random number saver
  rns:                 { module_type: RandomNumberSaver }
# convert raw::RawDigit to recob::wire
  caldata:            @local::dunefddphase_calwire
# actual hit finder and recconstruction
  gaushit:            @local::dunefddphase_gaushitfinder
  fasthit:            @local::dunefd_fasthitfinder
  linecluster:        @local::dunefd_linecluster
  calo:               @local::dune10kt_calomc
  #pandora:            @local::dunefd_pandora
  pandora:            @local::protodune_dp_pandora
  pandoraTrack:       @local::dune_pandoraTrackCreation
  pandoraShower:      @local::dune_pandoraShowerCreation
  pmtrack:            @local::dunefd_pmalgtrackmaker
  pmtrajfit:	      @local::dunefd_pmalgtrajfitter
  pmtrackcalo:        @local::dune10kt_calomc
  pmtrackpid:         @local::standard_chi2pid
  blurredcluster:     @local::dune10kt_blurredcluster
  emshower:           @local::dune10kt_emshower
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, caldata, fasthit, gaushit, pandora, pandoraTrack, pandoraShower, linecluster, pmtrack, pmtrackcalo, pmtrackpid, blurredcluster, emshower ]

	analyzers:
	{
	}
	 
	analyzeIt:  [ ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
 }
}
### Here, we overwrite ALL module labels with the ones defined above.

physics.producers.caldata.SigThrFact: 0.2


#PMAlg configuration

physics.producers.linecluster.HitFinderModuleLabel:	"gaushit"

physics.producers.pmtrackcalo.TrackModuleLabel:         "pmtrack"
physics.producers.pmtrackcalo.SpacePointModuleLabel:    "pmtrack"
physics.producers.pmtrackcalo.T0ModuleLabel:            ""
physics.producers.pmtrackcalo.CaloAlg.CalAreaConstants: [ 4.966e-2, 4.966e-2 ]
physics.producers.pmtrackpid.CalorimetryModuleLabel:  "pmtrackcalo"
physics.producers.pmtrackpid.TrackModuleLabel:        "pmtrack"

physics.producers.pmtrack.HitModuleLabel:             "linecluster"
physics.producers.pmtrack.ClusterModuleLabel:         "linecluster"

physics.producers.pmtrajfit.HitModuleLabel:           "linecluster"
physics.producers.pmtrajfit.PfpModuleLabel:           "pandora"

physics.producers.blurredcluster.HitsModuleLabel: "linecluster"
physics.producers.blurredcluster.TrackModuleLabel: "pmtrack"
physics.producers.blurredcluster.CreateDebugPDF:  false
physics.producers.blurredcluster.MergeClusters:   false
physics.producers.blurredcluster.GlobalTPCRecon:  true
physics.producers.blurredcluster.ShowerReconOnly: false
physics.producers.blurredcluster.VertexModuleLabel: "linecluster"

physics.producers.emshower.ClusterModuleLabel: "blurredcluster"
physics.producers.emshower.HitsModuleLabel: "linecluster"
physics.producers.emshower.TrackModuleLabel: "pmtrack"


################################################################################
# Pandora
################################################################################
physics.producers.pandora.ConfigFile: "PandoraSettings_Master_ProtoDUNE_DP.xml"
physics.producers.pandora.EnableLineGaps: true
physics.producers.pandora.EnableMCParticles: true
physics.producers.pandora.EnableProduction: true
physics.producers.pandora.GeantModuleLabel: "largeant"
physics.producers.pandora.HitFinderModuleLabel: "gaushit"
physics.producers.pandora.PrintOverallRecoStatus: false
physics.producers.pandora.ShouldPerformSliceId: false
physics.producers.pandora.ShouldRunAllHitsCosmicReco: true
physics.producers.pandora.ShouldRunCosmicHitRemoval: false
physics.producers.pandora.ShouldRunCosmicRecoOption: true
physics.producers.pandora.ShouldRunNeutrinoRecoOption: false
physics.producers.pandora.ShouldRunSlicing: true
physics.producers.pandora.ShouldRunStitching: false
physics.producers.pandora.UseGlobalCoordinates: false
physics.producers.pandora.UseHitWidths: true
physics.producers.pandoraTrack.PFParticleLabel:         "pandora"
physics.producers.pandoraShower.PFParticleLabel:        "pandora"



#Optical detector configuration
