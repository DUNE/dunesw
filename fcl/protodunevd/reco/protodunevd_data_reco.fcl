#include "HDF5RawInput3.fcl"
#include "PDHDTPCReader.fcl"
#include "PDHDDataInterfaceWIBEth3.fcl"
#include "PDHDTriggerReader3.fcl"
#include "PDHDTimingRawDecoder.fcl"
#include "DAPHNEReaderPDHD.fcl"

#include "wirecell_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "SpacePointSolver_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "calorimetry_pdune.fcl"
#include "calibration_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "particleid.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "showerfindermodules_dune.fcl"
#include "emshower3d.fcl"
#include "ProtoDUNETriggerFilter.fcl"
#include "OpSlicer.fcl"
#include "CRT.fcl"
#include "T0RecoAnodePiercers.fcl"
#include "numberofhitsfilter.fcl"
#include "protodune_tools_dune.fcl"

process_name: Reco

services:{
   TFileService: { fileName: "%ifb_reco_hist.root" }
   TimeTracker:       @local::dune_time_tracker
   MemoryTracker:     @local::dune_memory_tracker
   RandomNumberGenerator: {}
   FileCatalogMetadata:  @local::art_file_catalog_data
                         @table::protodunevd_reco_services
   message:  @local::dune_message_services_prod
        
   HDF5RawFile3Service:  {}
   IFDH: {}
   DetectorPropertiesService:  @local::protodunevd_detproperties

   PD2HDChannelMapService:
   {
     FileName: "PD2VDBottomTPCChannelMap_v1.txt"
   }

   #PD2HDChannelMapService:{
   #  FileName: "vdcbce_chanmap_v4.txt"
   #}
   #DAPHNEChannelMapService: {
   # FileName: "DAPHNE_vd_coldbox_ChannelMap_bde2.txt"
   # IgnoreLinks: true
   #}
   #IPhotonCalibrator: {
   #   BadChannels: []
   #   service_provider: "PhotonCalibratorServiceProtoDUNESP"
   #}
}

source: @local::hdf5rawinput3

proc_rootout: {
  module_type: RootOutput
  fileName: "%ifb_pdvd_bde_reco.root"
  #outputCommands: [ "keep *", "drop raw::RawDigit*_*_*_*" ]
  outputCommands: [ "keep *"]
  compressionLevel: 1
  dataTier: "full-reconstructed"
  streamName: "test"
}

outputs: {
  rootout: @local::proc_rootout
}

physics: {
  producers: {
    rns:            { module_type: "RandomNumberSaver" }
    #Decoders
    tpcrawdecoder:    @local::PDHDTPCReaderDefaults
    #pdhddaphne:       @local::DAPHNEReaderPDHD   
       #PDS reco
    wclsdatavd:         @local::protodunevd_nfsp
    gaushit:            @local::dunevdfd_gaushitfinder
    reco3d:             @local::protodunespmc_spacepointsolver

    # actual disambiguation
    hitpdune:           @local::pdune_disambigfromsp
    emtrkmichelid:      @local::protodune_emtrkmichelid

    pandora:            @local::protodune_pandora
    pandoraTrack:       @local::dune_pandoraTrackCreation
    pandoraShower:      @local::dune_pandoraShowerCreation

    pandoraWriter:      @local::dune_pandorawriter
    pandoraStdcalo:     @local::pdune_vd_standard_calodata
    pandoraGnocalo:     @local::pdune_vd_gnocchi_calodata

  }
  reco: [tpcrawdecoder,
        rns,
        wclsdatavd,
        gaushit,
        reco3d,
        hitpdune,
        pandora,
        pandoraTrack,
        pandoraShower,
        pandoraStdcalo,
        pandoraGnocalo #,
        ]

  read_tpc: [tpcrawdecoder]
  output : [ rootout ]
#  trigger_paths: [ read_tpc ]
  trigger_paths: [ reco ]
  end_paths : [ output ]
}

physics.producers.tpcrawdecoder.APAList: [ 10, 11 ]
physics.producers.tpcrawdecoder.DecoderToolParams: @local::PDHDDataInterfaceWIBEth3Defaults
physics.producers.tpcrawdecoder.DecoderToolParams.DebugLevel: 0 
physics.producers.tpcrawdecoder.DecoderToolParams.SubDetectorString: "VD_Bottom_TPC"
physics.producers.wclsdatavd.wcls_main.params.use_magnify:  "false"

physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.RoiThreshold: 2.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.RoiThreshold: 2.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2.RoiThreshold: 2.0

physics.producers.gaushit.CalDataModuleLabel: "wclsdatavd:gauss"
physics.producers.emtrkmichelid.WireLabel: "wclsdatavd:gauss"

physics.producers.pandora.ConfigFile:     "PandoraSettings_Master_ProtoDUNE_VD.xml"
physics.producers.pandora.HitFinderModuleLabel:             "hitpdune"
physics.producers.pandora.GeantModuleLabel:                 "tpcrawdecoder:simpleSC"
physics.producers.pandora.ShouldRunNeutrinoRecoOption: true
physics.producers.pandora.ShouldRunCosmicRecoOption:   false
physics.producers.pandora.ShouldRunAllHitsCosmicReco:  false
physics.producers.pandora.ShouldRunCosmicHitRemoval:   false
physics.producers.pandora.ShouldRunSlicing: false
physics.producers.pandora.ShouldRunStitching: false
physics.producers.pandora.ShouldPerformSliceId: false

physics.producers.pandoraWriter.GeantModuleLabel:           "tpcrawdecoder:simpleSC"
physics.producers.pandoraWriter.HitFinderModuleLabel:       "hitpdune"
physics.producers.pandoraWriter.GeneratorModuleLabel:       "generator"
physics.producers.pandoraTrack.PFParticleLabel:             "pandora"
physics.producers.pandoraShower.PFParticleLabel:            "pandora"

physics.producers.pandorapid.CalorimetryModuleLabel:        "pandoracalo"
physics.producers.pandorapid.TrackModuleLabel:              "pandoraTrack"

physics.producers.pandoracalipid.CalorimetryModuleLabel:        "pandoracali"
physics.producers.pandoracalipid.TrackModuleLabel:              "pandoraTrack"


