## same as protoDUNE_refactored_reco_stage1.fcl, no sce; no lifetime correction; no yz, x, t correction; *calinoxyzt<->*cali; *calipidnoxyzt<->*calipid
## this fcl is currently kept; we use two stage recos once we have calibration done: protoDUNE_refactored_reco_stage1.fcl and protoDUNE_refactored_reco_stage2.fcl

#include "services_refactored_pdune.fcl"
#include "wirecell_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "SpacePointSolver_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "calorimetry_vdcb.fcl"
#include "calorimetry_pdune.fcl"
#include "calibration_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "particleid.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "showerfindermodules_dune.fcl"
#include "emshower3d.fcl"
#include "ProtoDUNETriggerFilter.fcl"
#include "OpSlicer.fcl"
#include "CRT.fcl"
#include "T0RecoAnodePiercers.fcl"
#include "numberofhitsfilter.fcl"
##include "protodune_tools_dune.fcl"

process_name: Reco

services:
{
  TFileService: { fileName: "reco_protoDUNE_hist.root" }
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodunevd_reco_services
  IFDH: {}
  DetectorPropertiesService:  @local::protodunevd_detproperties

  DAPHNEChannelMapService: {
     FileName: "PDVD_PDS_Mapping_v04152025.json"
     IgnoreLinks: true
   } 

  IPhotonCalibrator: {
     BadChannels: []
     service_provider: "PhotonCalibratorServiceProtoDUNESP"
  }
}

services.BackTrackerService.BackTracker.G4ModuleLabel: "largeant"
services.BackTrackerService.BackTracker.SimChannelModuleLabel: "tpcrawdecoder:simpleSC"

source:
{
  module_type: RootInput
  maxEvents: 100
  saveMemoryObjectThreshold: 0
  fileNames: ["detsim_single_protoDUNE.root"]
}

physics: {

  filters: {
    trigfilter:  @local::pdsp_trigfilter_all
    nhitsfilter: @local::standard_numberofhitsfilter
  }

  producers: {
    rns:            { module_type: "RandomNumberSaver" }
    wclsdatavd:         @local::protodunevd_nfsp
    gaushit:            @local::dunevdfd_gaushitfinder
    reco3d:             @local::protodunespmc_spacepointsolver

    ophit:              @local::protodunevd_ophit
    opflash:            @local::protodunevd_opflash
    opslicer:           @local::protodune_opslicer

    # actual disambiguation
    hitpdune:           @local::pdune_disambigfromsp
    emtrkmichelid:      @local::protodune_emtrkmichelid

    pandora:            @local::protodune_pandora
    pandoraTrack:       @local::dune_pandoraTrackCreation
    pandoraShower:      @local::dunefdvd_pandoraModularShowerCreation

    pandoraWriter:      @local::dune_pandorawriter
    pandoraStdcalo:     @local::pdune_vd_standard_calodata
    pandoraGnocalo:     @local::pdune_vd_gnocchi_calodata
  }

reco: [ rns,
        ophit, opflash, opslicer,
        wclsdatavd,
        gaushit,
        reco3d,
        hitpdune,
        pandora,
        pandoraTrack,
        pandoraShower,
        pandoraStdcalo,
        pandoraGnocalo
        ]

  stream1:  [ out1 ]

  trigger_paths: [reco]

  end_paths:     [stream1]
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   outputCommands: [ "keep *", "drop *_reco3d_noreg_*", "drop *_reco3d_pre_*" ]
   compressionLevel: 1 #zlib argument (0-9)
   fastCloning: true
 }
}

physics.producers.ophit.InputModule: "opdigi"
physics.producers.ophit.InputLabels: [ "" ]
physics.producers.opflash.InputModule:                       "ophit"
physics.producers.opslicer.OpHitModuleLabel:                 "ophit"

physics.producers.wclsdatavd.wcls_main.params.use_magnify:  "false"

physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.RoiThreshold: 1.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.RoiThreshold: 1.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2.RoiThreshold: 1.0

physics.producers.gaushit.CalDataModuleLabel: "wclsdatavd:gauss"
physics.producers.emtrkmichelid.WireLabel: "wclsdatavd:gauss"

physics.producers.pandora.ConfigFile:     "PandoraSettings_Master_ProtoDUNE_VD.xml"
physics.producers.pandora.HitFinderModuleLabel:             "hitpdune"
physics.producers.pandora.GeantModuleLabel:                 "tpcrawdecoder:simpleSC"

physics.producers.pandoraWriter.GeantModuleLabel:           "tpcrawdecoder:simpleSC"
physics.producers.pandoraWriter.HitFinderModuleLabel:       "hitpdune"
physics.producers.pandoraWriter.GeneratorModuleLabel:       "generator"
physics.producers.pandoraTrack.PFParticleLabel:             "pandora"
physics.producers.pandoraShower.PFParticleLabel:            "pandora"

physics.producers.pandorapid.CalorimetryModuleLabel:        "pandoracalo"
physics.producers.pandorapid.TrackModuleLabel:              "pandoraTrack"

physics.producers.pandoracalipid.CalorimetryModuleLabel:        "pandoracali"
physics.producers.pandoracalipid.TrackModuleLabel:              "pandoraTrack"
