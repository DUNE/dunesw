# opdet_multireco_dune10kt_1x2x6

# Alex Himmel
# March 2019
#
# Job fhicl for running multiple variants of the photon detector reconstruction simulatneously
# Runs a limited amount of TPC reconstruction as well

#include "services_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "OpDetMultisim.fcl"

#include "tools_dune.fcl"


process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "%ifb_reco_hist.root" }
  MemoryTracker:     {}
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::dunefd_reco_services_legacy
}

### Use the 1x2x6 geometry ###
services.AuxDetGeometry: @local::dune10kt_1x2x6_auxdet_geo
services.Geometry: @local::dune10kt_1x2x6_geo

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  10        # Number of events to create
  saveMemoryObjectThreshold: 0
  inputCommands: ["keep *_*_*_*", "drop *_*_*_Reco" ]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
  # random number saver
  rns:                 { module_type: RandomNumberSaver }

  # TPC reconstruction
  caldata:            @local::producer_adcprep
  gaushit:            @local::dunefd_gaushitfinder
  hitfd:              @local::dunefd_hitfinderfd

  # PD reconstruction
  @table::pd_reco_modules
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, caldata, gaushit, hitfd, @sequence::pd_reco_path ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
 }
}

