#include "services_dune.fcl"
#include "singles_dune.fcl"
#include "largeantmodules_dune.fcl"
#include "tools_dune.fcl"

process_name: Detsim

services:
{
  TFileService: { fileName: "realistic_noise_hist.root" }
  TimeTracker:       {}
  MemoryTracker:         {} # default is one
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:   @local::art_file_catalog_mc
  NuRandomService:       @local::random_NuRandomService  # seedservice.fcl
                         @table::dunefddphase_simulation_services_legacy
}

services.AuxDetGeometry: @local::dunedphase10kt_workspace_auxdet_geo
services.Geometry: @local::dunedphase10kt_workspace_geo

#source is now a root file
source: {
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics: {
 producers: {
   daq:            @local::dune_detsim
   rns:            { module_type: "RandomNumberSaver" }
 }
 simulate: [ rns, daq ]
 stream1:  [ out1 ]
 trigger_paths: [simulate]
 end_paths:     [stream1]
}

outputs: {
 out1: {
   module_type: RootOutput
   fileName:    "%ifb_detsim.root"
   dataTier:    "detector-simulated"
   compressionLevel: 1
 }
}

# DetSim services.
#services.SimChannelExtractService: @local::scxgeneric
services.ChannelNoiseService:       @local::chnoiseold
services.PedestalAdditionService:   @local::padprovided
services.AdcDistortService:         @local::stuckbits
#services.AdcSuppressService:       @local::zslegacy
services.AdcSuppressService:        @local::zsonline
#services.AdcCompressService:       @local::cmpblock
services.AdcCompressService:        @local::cmpreplace

# Use fixed values instead of DB for pedestals.
services.DetPedestalService: @local::dunedp_fixedpeds
services.DetPedestalService.FixedDetPedestal.PedMeanErrY: 0
services.DetPedestalService.FixedDetPedestal.PedMeanErrZ: 0
services.DetPedestalService.FixedDetPedestal.PedMeanY:    60 #from 3x1x1 data
services.DetPedestalService.FixedDetPedestal.PedMeanZ:    60 #from 3x1x1 data
services.DetPedestalService.FixedDetPedestal.PedRmsErrY:  0
services.DetPedestalService.FixedDetPedestal.PedRmsErrZ:  0
services.DetPedestalService.FixedDetPedestal.PedRmsY:     0
services.DetPedestalService.FixedDetPedestal.PedRmsZ:     0

# DetSim flags.
physics.producers.daq.NoiseOn:     true
physics.producers.daq.PedestalOn:  true
physics.producers.daq.DistortOn:   false
physics.producers.daq.SuppressOn:  false #false when noise on

# Disable bad channels.
#services.IChannelStatusService.BadChannels: [ ]

services.ChannelNoiseService:{
  service_provider: DPhaseRealisticNoiseService
  NoiseModel:       "$MRB_SOURCE/dunetpc/dune/DetSim/NoiseModels/729-0_fft_mirror.root"
  RandomizeX:       15.0     #amplitude randomization sigma
  RandomizeY:       15.0     #amplitude randomization sigma
  Smooth:           1000      #smoothing factor when mirroring
  SetFirst0:        false    #set first bin of the fft model to 0
  SetBaseline:      false    #if true, baseline added to real noise model
  NoiseArrayPoints: 1000     #number of pre-generated waveforms
  OldNoiseIndex:    false    #From ExponentialChannelNoiseService. Keep false
}
