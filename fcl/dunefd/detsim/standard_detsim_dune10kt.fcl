# standard_detsim_dune10kt.fcl 

# Dom Brailsford 
# (Laura Paulucci: opdetsim updated on Jan 2022)
#

#include "wirecell_dune.fcl"
#include "services_dune.fcl"
#include "detsimmodules_dune.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "tools_dune.fcl"

process_name: detsim


services:
{
   TFileService: { fileName: "%ifb_detsim_hist.root" }
   TimeTracker:       {}
   MemoryTracker:         { } # default is one
   RandomNumberGenerator: {} #ART native random number generator
   FileCatalogMetadata:  @local::art_file_catalog_mc
   @table::dunefd_simulation_services
   message:              @local::dune_message_services_prod
}

#source is now a root file
source: {
  module_type: RootInput
  maxEvents:  10        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics: {
 producers: {
#   daq:            @local::dune_detsim

   tpcrawdecoder: @local::dune10kt_horizdrift_sim_nfsp
   opdigi:        @local::standard_template_digitizer
   rns:            { module_type: "RandomNumberSaver" }
 }
# simulate: [ rns, daq, @sequence::pd_detsim_path ]
simulate: [ tpcrawdecoder, opdigi, rns ]
 stream1:  [ out1 ]
 trigger_paths: [simulate] 
 end_paths:     [stream1]  
}

outputs: {
 out1: {
   module_type: RootOutput
   fileName:    "%ifb_detsim.root"
   dataTier:    "detector-simulated"
   compressionLevel: 1
 }
}
