#include "services_dune.fcl"
#include "marley_dune.fcl"
#include "photpropservices_dune.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "largeantmodules_dune.fcl"
#include "tools_dune.fcl"

process_name: MARLEYGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService:          { fileName: "off.root" }
  TimeTracker:           {}
  MemoryTracker:         { } # default is one
  RandomNumberGenerator: {}                 # ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
                          @table::dunefddphase_simulation_services_legacy
 NuRandomService:       @local::random_NuRandomService  # seedservice.fcl
AuxDetGeometry: @local::dunedphase10kt_workspace4x2_auxdet_geo
 Geometry: @local::dunedphase10kt_workspace4x2_geo
}


services.LArG4Parameters.FillSimEnergyDeposits: true

# Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   1          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}
physics:
{
 
  producers:
  {
    generator: @local::dune_marley_monoenergetic
    rns:       { module_type: "RandomNumberSaver" }
  }
 
  simulate:      [ rns, generator] 
  stream1:       [ out1 ] 

  trigger_paths: [ simulate ] 
  end_paths:     [ stream1 ]  
}

outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "dunedp_marley_FD_geng4detsim_TO_CHANGE_ENERGYMeV.root" # Default file name, can override from command line with -o or --output
    dataTier:    "detsim"
    compressionLevel: 1
  }
}

physics.producers.generator.marley_parameters.source.energy: 15 #MeV

#physics.producers.generator.vertex: { type: "fixed"  position: [ 550., 0., 3000. ]}
