#include "HDF5RawInput3.fcl"
#include "PDHDTPCReader.fcl"
#include "PDHDDataInterfaceWIBEth3.fcl"
#include "PDHDTriggerReader3.fcl"
#include "PDHDTimingRawDecoder.fcl"
#include "DAPHNEReaderPDHD.fcl"
#
#include "opticaldetectormodules_dune.fcl"
#include "Deconvolution.fcl"
#include "OpHitFinderDeco.fcl"
#include "OpSlicer.fcl"

#include "t0reco.fcl"
#include "pandoramodules_dune.fcl"
#include "wirecell_dune.fcl"
#include "particleid.fcl"

#include "CRT.fcl"
#include "T0RecoAnodePiercers.fcl"
#
#include "numberofhitsfilter.fcl"
#include "SpacePointSolver_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "calorimetry_pdune.fcl"
#include "calibration_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "PDHDFEMBFilter.fcl"

#include "services_dune.fcl"
#include "spacecharge_dune.fcl"
#include "dune_calibanatree.fcl"

process_name: pdhdkeepupprocessing 

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_data
  ChannelStatusService: @local::dunefd_channel_status
  ExptGeoHelperInterface:       @local::dune_geometry_helper
  GeometryConfigurationWriter:  {}
  Geometry:                     @local::protodunehdv6_geo
  DetectorClocksService:        @local::protodunehd_detectorclocks
  DetectorPropertiesService:    @local::protodunehd_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft
  DatabaseUtil:                 @local::dunefd_database
  BackTrackerService:           @local::pdsp_backtrackerservice
  ParticleInventoryService:     @local::dunefd_particleinventoryservice
  PhotonBackTrackerService:     @local::dunefd_photonbacktrackerservice_legacy
  SpaceCharge:                  @local::pdhd_spacecharge


  IFDH: {}

  TFileService: 
  {
    fileName: "pdhd_keepup_decoder.root"
  } 
  HDF5RawFile3Service:  {}

  DAPHNEChannelMapService: {
    FileName: "DAPHNE_test5_ChannelMap_v1.txt"
  }

  PD2HDChannelMapService: 
   {
     FileName: "PD2HDChannelMap_WIBEth_electronics_v1.txt"
   }
}

physics:
{

  filters: {
    nhitsfilter: @local::pdhd_nhitsfilter
    fembfilter: @local::pdhdfembfilter
  }

  producers:
  {
    # Raw decoding
    tpcrawdecoder: @local::PDHDTPCReaderDefaults
    triggerrawdecoder: @local::PDHDTriggerReader3Defaults 
    timingrawdecoder: @local::PDHDTimingRawDecoder
    pdhddaphne: @local::DAPHNEReaderPDHD

    # Beam Instrumentation Info
    # TODO 

    # Optical reconstruction
    opdec:              @local::dune_deconvolution
    ophitspe:           @local::dune_ophit_finder_deco
    opflash:            @local::protodune_opflash
    opslicer:           @local::protodune_opslicer

    # Signal Processing (data prep)
    wclsdatahd:         @local::protodunehd_nfsp
    # Hit finding
    gaushit:            @local::protodunespmc_gaushitfinder
    # space point solver
    reco3d:             @local::pdhd_data_spacepointsolver
    # actual disambiguation
    hitpdune:           @local::pdune_disambigfromsp
    # hit feature labeling
    emtrkmichelid:      @local::pdhd_data_emtrkmichelid

    # Pandora Reconstruction
    pandora:            @local::protodunehd_pandora
    pandoraWriter:      @local::dune_pandorawriter
    pandoraTrack:       @local::dune_pandoraTrackCreation
    pandoraShower:      @local::dune_pandoraShowerCreation

    ## Standard/Old PDSP style Calorimetry
    pandoracalo:        @local::pdhd_calodata
    pandoracalonosce:   @local::pdhd_calodatanosce
    pandorapid:         @local::standard_chi2pid
    pandoraShowercalo:  @local::pdhd_showercalodata
    pandoraShowercalonosce:  @local::pdhd_showercalodatanosce

    ## Gnocchi Calorimetry 
    pandoraGnocchiCalo: @local::pdhd_gnocchi_calodata
    pandoraGnocchiCalonosce: @local::pdhd_gnocchi_calodata_nosce

    # CRT Reconstruction
    crtreco: @local::TwoCRTMatching_producer
    crttag: @local::SingleCRTMatching_producer
  }

  produce: [
    tpcrawdecoder,
    #triggerrawdecoder,
    #timingrawdecoder,
    #pdhddaphne,
    fembfilter,
    wclsdatahd,
    gaushit,
    nhitsfilter,
    reco3d,
    hitpdune,
    ###Commenting a lot out for now for just beam reco
    pandora, pandoraWriter, pandoraTrack, pandoraShower #, pandoracalo, pandoracalonosce,
    #pandorapid, pandoraShowercalo, pandoraShowercalonosce,
    #pandoraGnocchiCalo,
    #pandoraGnocchiCalonosce,
    #emtrkmichelid,
    #opdec,
    #ophitspe,
    #opflash,
    #opslicer
    ##crtreco, crttag
  ]

  output: [ out1 ]
  trigger_paths : [ produce ]
  end_paths: [ output ]
}

outputs:
{
  out1:
  {
    outputCommands: [ "keep *", "drop raw::RawDigit*_*_*_*"]
    compressionLevel: 1
    module_type: RootOutput
    fileName: "%ifb_%tc_keepup.root"
    dataTier:    "full-reconstructed"
    streamName: "out1"
  }
}
source: @local::hdf5rawinput3

##Check this
physics.producers.tpcrawdecoder.DecoderToolParams: @local::PDHDDataInterfaceWIBEth3Defaults
physics.producers.pdhddaphne.DAPHNEInterface: { tool_type: "DAPHNEInterface2" }
physics.producers.opdec.InputModule: "pdhddaphne"
physics.producers.opdec.InstanceName: "daq"
physics.producers.ophitspe.InputModuledigi: "pdhddaphne:daq"
physics.producers.opflash.InputModule: "ophitspe"
physics.producers.opslicer.OpHitModuleLabel: "ophitspe"
physics.producers.gaushit.CalDataModuleLabel: "wclsdatahd:gauss"

services.SpaceCharge.EnableSimEfieldSCE: true
services.SpaceCharge.EnableSimSpatialSCE: true
services.SpaceCharge.EnableSimulationSCE: true

services.SpaceCharge.EnableCalEfieldSCE: true
services.SpaceCharge.EnableCalSpatialSCE: true
services.SpaceCharge.EnableCorrSCE: true

physics.producers.pandora.HitFinderModuleLabel:             "hitpdune"
physics.producers.pandoraWriter.HitFinderModuleLabel:       "hitpdune"
physics.producers.pandoraTrack.PFParticleLabel:             "pandora"
physics.producers.pandoraShower.PFParticleLabel:            "pandora"
physics.producers.pandorapid.CalorimetryModuleLabel:        "pandoracalo"
physics.producers.pandorapid.TrackModuleLabel:              "pandoraTrack"

