#include "services_refactored_pdune.fcl"
#
#include "singles_dune.fcl"
#include "corsika_protodune.fcl"
#include "protodunehd_radiological_model_decay0.fcl"

process_name: SinglesGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "prod_cosmics_protodunehd_hist.root" }
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::protodunehd_refactored_simulation_services
}

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   cosmicgenerator: @local::protodune_corsika_cmc
   ar39:             @local::protodunehd_39Ar_in_LAr
   kr85:             @local::protodunehd_85Kr_in_LAr
   ar42:             @local::protodunehd_42Ar_in_LAr
   k42fromar42:      @local::protodunehd_42Kfrom42Ar_in_LAr

   k40cpa:           @local::protodunehd_40K_in_CPA
   th232cpa:         @local::protodunehd_232Th_chain_in_CPA
   u238cpa:          @local::protodunehd_238U_chain_in_CPA

   k40beam:          @local::protodunehd_40K_in_CPA
   th232beam:        @local::protodunehd_232Th_chain_in_CPA
   u238beam:         @local::protodunehd_238U_chain_in_CPA

   co60apa:          @local::protodunehd_60Co_in_APA
   th232apa:         @local::protodunehd_232Th_chain_in_APA   
   u238apa:          @local::protodunehd_238U_chain_in_APA

   k40apaboards:     @local::protodunehd_40K_in_APAboards
   th232apaboards:   @local::protodunehd_232Th_chain_in_APAboards
   u238apaboards:    @local::protodunehd_238U_chain_in_APAboards

 }


 #define the producer and filter modules for this path, order matters, 
 simulate: [cosmicgenerator, ar39, ar42, kr85, k42fromar42,
        	k40beam, th232beam, u238beam,
		k40cpa,  th232cpa,  u238cpa, 
		co60apa, th232apa,  u238apa, 
		k40apaboards, th232apaboards, u238apaboards 
 ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "prod_cosmics_protodunehd.root" #default file name, can override from command line with -o or --output
   dataTier: "generated"
   compressionLevel: 1
 }
}

physics.producers.k40beam.volume_gen:   "volEWBeam"
physics.producers.k40beam.material:     "FR4"
physics.producers.th232beam.volume_gen: "volEWBeam"
physics.producers.th232beam.material:   "FR4"
physics.producers.u238beam.volume_gen:  "volEWBeam"
physics.producers.u238beam.material:    "FR4"

physics.producers.k40apaboards.volume_gen:   ".*G10Board.*"
physics.producers.th232apaboards.volume_gen: ".*G10Board.*"
physics.producers.u238apaboards.volume_gen:  ".*G10Board.*"


