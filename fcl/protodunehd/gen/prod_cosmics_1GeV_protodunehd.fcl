#include "services_refactored_pdune.fcl"
#
#include "singles_dune.fcl"
#include "corsika_protodune.fcl"
#include "dune_radiological_model.fcl"

process_name: SinglesGen

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "prod_cosmics_protodunehd_hist.root" }
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  FileCatalogMetadata:  @local::art_file_catalog_mc
  @table::protodunehd_refactored_simulation_services
}

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   cosmicgenerator: @local::protodune_corsika_cmc  
   ar39:  @local::protodunesp_39ar
   ar42:  @local::protodunesp_42ar
   kr85:  @local::protodunesp_85kr
   rn222: @local::protodunesp_222rn
 }


 #define the producer and filter modules for this path, order matters, 
 simulate: [cosmicgenerator, ar39, ar42, kr85, rn222 ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "prod_cosmics_protodunehd.root" #default file name, can override from command line with -o or --output
   dataTier: "generated"
   compressionLevel: 1
 }
}
