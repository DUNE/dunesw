## protoDUNE reco mc stage 1: no sce; no lifetime corection; no yz, x, t correction
##   note: *calo are same as *calonosce. Ideally, we need to remove those *calo.

#include "services_refactored_pdune.fcl"
#include "protoDUNE_reco_mc_prolog.fcl"
#include "ProtoDUNETriggerFilter.fcl"
#include "numberofhitsfilter.fcl"
#include "protodune_tools_dune.fcl"


process_name: Reco1


services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "protoDUNE_reco1_hist.root" }
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::protodune_reco_services
#  ChannelStatusService: @local::pdsp_channel_status
  IFDH: {}
}

services.Geometry.SortingParameters.ChannelsPerOpDet: 12
services.Geometry.GDML: "protodune_v7.gdml"
services.AuxDetGeometry.GDML: @local::services.Geometry.GDML

#BackTracker Module labels
services.BackTrackerService.BackTracker.G4ModuleLabel: "largeant"
services.BackTrackerService.BackTracker.SimChannelModuleLabel: "tpcrawdecoder:simpleSC"
services.DetectorPropertiesService:    @local::protodunesp_detproperties
services.DetectorPropertiesService.GetHVDriftfromSamweb:           false
services.DetectorPropertiesService.GetReadOutWindowSizefromSamweb: false
services.DetectorPropertiesService.UseRunDependentTemperature:     false

services.RawDigitPrepService.ToolNames: @local::pdsim_dataprep_tools_wirecell

# Use channel map service for data
services.PdspChannelMapService:        @local::pdspchannelmap


source:
{
  module_type: RootInput
  maxEvents: -1
  saveMemoryObjectThreshold: 0
  fileNames: ["detsim_single_protoDUNE.root"]
}


outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "%ifb_reco1.root"
    dataTier:    "full-reconstructed"
    outputCommands: [ "keep *", "drop raw::RawDigit*_*_*_*", "drop recob::Wires_caldata_dataprep_*", "drop *_wclsdatasp_wiener_*", "drop *_reco3d_noreg_*", "drop *_reco3d_pre_*" ]
    #outputCommands: [ "keep *", "drop *_reco3d_noreg_*", "drop *_reco3d_pre_*" ]
    compressionLevel: 1 #zlib argument (0-9)
    fastCloning: true
    #basketSize: 8192 #[Byte] buffer size at 8k
    #splitLevel: 0 #reduces number of buffers
    #treeMaxVirtualSize: 1 #[Byte] limits number of buffers/branch to 1 (default is 10)
  }
}


physics: {

  filters: {
    trigfilter:  @local::pdsp_trigfilter_all
    nhitsfilter: @local::standard_numberofhitsfilter
  }

  producers: {
    @table::protoDUNE_reco_mc_stage1_producers
  }

  reco: [ @sequence::protoDUNE_reco_mc_stage1
      ]

  #define the output stream, there could be more than one if using filters
  stream1:  [ out1 ]

  #trigger_paths is a keyword and contains the paths that modify the art::event,
  #ie filters and producers
  trigger_paths: [reco]

  #end_paths is a keyword and contains the paths that do not modify the art::Event,
  #ie analyzers and output streams.  these all run simultaneously
  end_paths:     [stream1]
}

# xyzt database
services.XYZCalibService.IsMC: true
services.XYZCalibService.UseCondbXYZCorr: false
#services.XYZCalibService.YZCorrDBTag: "prod4amcsceoff"
#services.XYZCalibService.XCorrDBTag: "prod4amcsceoff"
#services.XYZCalibService.NormCorrDBTag: "prod4amcsceoff"
